//Generic VLO file template for start/expand levels

//Cam2D.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"SUB_2_6S"	//points to next level

/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		2
alliancePlayer	int		0		//ally player with self (could be a different player number
allianceEnemy[0]	int	2		//ally enemy with self (could be a different player number
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE

/* Starting Enemy Power */
power[0]	int		20000		//starting power values for each enemy listed above

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		0
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		0
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		0
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		0
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		0
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		0

/* Initialisation */
centreX		int		704	//6976	//starting view centre (in world units)
centreY		int		704	//6720
scrollX1	int		0	//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		64
scrollY2	int		64
zoomLevel	int		1	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		1	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		7	//54	//coords of LZs in tile units
LZY[0]		int		5	//52


/* Transport exit and entry */
transX[0]	int		1	//62	//entry coords
transY[0]	int		5	//47
transX[1]	int		11	//62	//exit coords
transY[1]	int		1	//60

ReinforceTime	INT		3000	// (5 minute) number of seconds*10 for transport, -1 for no reinforcements


/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		30
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade04"	
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials05"	
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade05"	
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade05"	
startTech	[0]	[4]	RESEARCHSTAT	"R-Struc-VTOLFactory-Upgrade03"	
startTech	[0]	[5]	RESEARCHSTAT	"R-Struc-VTOLPad-Upgrade03"	
startTech	[0]	[6]	RESEARCHSTAT	"R-Vehicle-Engine05"	
startTech	[0]	[7]	RESEARCHSTAT	"R-Vehicle-Metals05"	
startTech	[0]	[8]	RESEARCHSTAT	"R-Cyborg-Metals05"	
startTech	[0]	[9]	RESEARCHSTAT	"R-Vehicle-Armor-Heat02"	
startTech	[0]	[10]	RESEARCHSTAT	"R-Cyborg-Armor-Heat02"	
startTech	[0]	[11]	RESEARCHSTAT	"R-Sys-Engineering02"	
startTech	[0]	[12]	RESEARCHSTAT	"R-Wpn-Cannon-Accuracy02"	
startTech	[0]	[13]	RESEARCHSTAT	"R-Wpn-Cannon-Damage05"	
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-Cannon-ROF03"	
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Flamer-Damage06"	
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Flamer-ROF03"	
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Howitzer-Accuracy01"	
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-Howitzer-Damage01"	
startTech	[0]	[19]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"	
startTech	[0]	[20]	RESEARCHSTAT	"R-Wpn-MG-Damage07"	
startTech	[0]	[21]	RESEARCHSTAT	"R-Wpn-MG-ROF03"	
startTech	[0]	[22]	RESEARCHSTAT	"R-Wpn-Mortar-Acc02"	
startTech	[0]	[23]	RESEARCHSTAT	"R-Wpn-Mortar-Damage06"	
startTech	[0]	[24]	RESEARCHSTAT	"R-Wpn-Mortar-ROF03"	
startTech	[0]	[25]	RESEARCHSTAT	"R-Wpn-Rocket-Accuracy02"	
startTech	[0]	[26]	RESEARCHSTAT	"R-Wpn-Rocket-Damage06"	
startTech	[0]	[27]	RESEARCHSTAT	"R-Wpn-Rocket-ROF03"	
startTech	[0]	[28]	RESEARCHSTAT	"R-Wpn-RocketSlow-Accuracy03"	
startTech	[0]	[29]	RESEARCHSTAT	"R-Wpn-RocketSlow-Damage06"	


/* Briefings */
numBriefs	int		1	//MAX 5. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB2_DI_MSG"	//"MB2_DI_MSG2"
briefVal[0] int		2	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"


/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next
objective[0]	INTMESSAGE	"C2D_OBJ1"
objectiveX[0]	int		4160	//doesn't use index to array, use world coords
objectiveY[0]	int		4544	//12736

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		1	//all enemy vehicles and structures need to be killed
victory[1]	int		3	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		-1	//number of bases to destroy (uses base[0] to base[#])

/* might use these later if necessary
victory[4]	int		-1	//kill all UNITS belonging to enemy # index
victory[5]	int		-1	//kill all STRUCTURES belonging to enemy # index
victory[6]	int		-1	//REGION index to check for defences built
victory[7]	int		-1	//# of EXTRA defences to build in REGION
*/
//use this to communicate extra victory conditions in another script run beside the generic one
linkVictory	BOOL		TRUE	//if player captures NASDA uplink

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//numFail	int		0	//number required to be met (usually one if used!)
//only one of these has to be met
//Use -1 for False, # for True (often an index to check!)

fail	[0]	int		-1	//0	//group # index all got to REGION
fail	[1]	int		-1	//2	//REGION index for above (these count as one condition!)

/* might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????
*/
//use this to communicate extra fail conditions in another script run beside the generic one
linkFail	BOOL		TRUE	//if NASDA uplink destroyed


/* Artifacts */
victoryArt	int		4	//number of artifacts required for victory (must be <= numArt)
numArt	int		4	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
artType	[0]	int		1				//From HQ
artVal	[0]	int		2	//7				
artX		[0]	int		3904
artY		[0]	int		4800	//12992
artComp	[0]	RESEARCHSTAT "R-Struc-Research-Upgrade04"

artType	[1]	int		1				//From Heavy Factory 3
artVal	[1]	int		1	//5
artX		[1]	int		5824
artY		[1]	int		4544	//12736
artComp	[1]	RESEARCHSTAT "R-Wpn-Howitzer-Accuracy01"

artType	[2]	int		1				//From Command Relay
artVal	[2]	int		4	//9
artX		[2]	int		3520
artY		[2]	int		4416
artComp	[2]	RESEARCHSTAT "R-Wpn-Bomb02"

artType	[3]	int		1				//From Research Fac
artVal	[3]	int		3	//8
artX		[3]	int		4160
artY		[3]	int		5696
artComp	[3]	RESEARCHSTAT "R-Struc-VTOLPad-Upgrade01"


/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 15	*/
//structures	[0]	STRUCTURE	3739		//Cyborg Factory 4 (NE BASE)
//structures	[1]	STRUCTURE	3740		//Cyborg Factory 5 (NE BASE)
//structures	[2]	STRUCTURE	3734		//VTOL Factory 1 (NE BASE)
//structures	[3]	STRUCTURE	3735		//VTOL Factory 2 (NE BASE)
structures	[0]	STRUCTURE	2419		//Cyborg Factory 1 (SOUTH BASE)
//structures	[1]	STRUCTURE	3149		//Cyborg Factory 2 (SOUTH BASE)
//structures	[2]	STRUCTURE	3150		//Cyborg Factory 3 (SOUTH BASE)
//structures	[3]	STRUCTURE	3228		//Heavy Factory 1 (SOUTH BASE)
//structures	[4]	STRUCTURE	3229		//Heavy Factory 2 (SOUTH BASE)
structures	[1]	STRUCTURE	3231		//Heavy Factory 3 (SOUTH BASE)
//structures	[2]	STRUCTURE	3230		//Heavy Factory 4 (SOUTH BASE)
structures	[2]	STRUCTURE	2414		//HQ (gives artifact)
structures	[3]	STRUCTURE	4175		//Research Facility (gives artifact)
structures	[4]	STRUCTURE	2415		//Command Relay (gives artifact)


/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
droids		[0]	DROID		4176		//truck1
droids		[1]	DROID		4177		//truck2
droids		[2]	DROID		4178		//truck2

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/
/*
templates	[0]	TEMPLATE	"CO-H-HPVCannon-Tracks"
templates	[1]	TEMPLATE	"CO-H-How150-Tracks"
templates	[2]	TEMPLATE	"CO-H-QuadRotAA-Halftrack"
templates	[3]	TEMPLATE	"CO-M-Con-Htrack" 		//Truck Vehicle
templates	[4]	TEMPLATE	"CO-M-AA1-HalfTrack"
templates	[5]	TEMPLATE	"CO-M-HPVCannon-Tracks"
templates	[6]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[7]	TEMPLATE	"CO-M-Sensor-Half-Track"	//Sensor Vehicle
templates	[8]	TEMPLATE	"CO-M-Rocket-HvyA-T-Track"
templates	[9]	TEMPLATE	"CO-M-RotMortar-Halftrack"
templates	[10]	TEMPLATE	"CO-M-Repair-HalfTrack"		//Repair Vehicle

//Collective VTOL Templates
templates	[11]	TEMPLATE	"CO-L-Rocket-VTOL-Pod-VTOL"
templates	[12]	TEMPLATE	"CO-L-MG2-VTOL"
templates	[13]	TEMPLATE	"CO-L-Rocket-LtA-T-VTOL"
templates	[14]	TEMPLATE	"CO-M-Bomb2-VTOL"

//Cyborg Templates (SHARED)
templates	[15]	TEMPLATE	"Cyb-Chain-GROUND"
templates	[16]	TEMPLATE	"Cyb-RotMG-GROUND"
templates	[17]	TEMPLATE	"Cyb-Flamer-GROUND"
templates	[18]	TEMPLATE	"Cyb-Rocket-GROUND"
templates	[19]	TEMPLATE	"Cyb-Cannon-GROUND"
*/

templates	[0]	TEMPLATE	"CO-H-HPVCannon-Tracks"
templates	[1]	TEMPLATE	"CO-M-Rocket-HvyA-T-Track"
templates	[2]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[3]	TEMPLATE	"CO-M-Con-T" 			//Truck Vehicle

templates	[4]	TEMPLATE	"CO-H-QuadRotAA-T"
templates	[5]	TEMPLATE	"CO-M-HPVCannon-Tracks"
templates	[6]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[7]	TEMPLATE	"CO-M-Sensor-T"			//Sensor Vehicle

templates	[8]	TEMPLATE	"CO-H-HvyCan-Tracks"		//IDFs
templates	[9]	TEMPLATE	"CO-H-HPVCannon-Tracks"
templates	[10]	TEMPLATE	"CO-M-Repair-T"			//Repair Vehicle

//Collective VTOL Templates
templates	[11]	TEMPLATE	"CO-M-HVAT-V"
templates	[12]	TEMPLATE	"CO-L-Rocket-LtA-T-VTOL"
templates	[13]	TEMPLATE	"CO-L-RotMG-VTOL"
templates	[14]	TEMPLATE	"CO-M-Bomb2-VTOL"

//Cyborg Templates (SHARED)
templates	[15]	TEMPLATE	"Cyb-Cannon-GROUND"
templates	[16]	TEMPLATE	"Cyb-RotMG-GROUND"
templates	[17]	TEMPLATE	"Cyb-Flamer-GROUND"
templates	[18]	TEMPLATE	"Cyb-Rocket-GROUND"
templates	[19]	TEMPLATE	"Cyb-Cannon-GROUND"

/* Templates available for this level */
/*
//Trucks
TEMPLATE	"CO-M-Con-T" 

//Repairs
TEMPLATE	"CO-M-Repair-T"

//Sensors
TEMPLATE	"CO-M-Sensor-T"
TEMPLATE	"CO-M-CBS-T"
TEMPLATE	"CO-M-Vstrike-T"
TEMPLATE	"CO-M-VTOLCBS-T"			

//Commanders
TEMPLATE	"CO-H-Command-Track"
TEMPLATE	"CO-H-COM-H"			

//Tanks
TEMPLATE	"CO-M-HMG-T"
TEMPLATE	"CO-M-MedCan-Tracks"
TEMPLATE	"CO-H-HvyCan-Tracks"
TEMPLATE	"CO-M-HvMortar-T"
TEMPLATE	"CO-M-Rocket-LtA-T-T"			
TEMPLATE	"CO-M-HvFlame-Track"		
TEMPLATE	"CO-H-How105-Tracks"		
TEMPLATE	"CO-M-LTAT-Hover"			
TEMPLATE	"CO-M-HPVCannon-Tracks"		
TEMPLATE	"CO-H-Rkt-BB-T"			
TEMPLATE	"CO-H-How150-Tracks"			
TEMPLATE	"CO-M-RR-HT"				
TEMPLATE	"CO-H-QuadRotAA-T"			
TEMPLATE	"CO-H-HPVCannon-Tracks"		
TEMPLATE	"CO-M-ROTMG-T"			
TEMPLATE	"CO-H-QuadBofAA-T"			
TEMPLATE	"CO-M-Rocket-HvyA-T-Track"		//new
TEMPLATE	"CO-M-RotMortar-T"			//new

//Cyborgs
TEMPLATE	"Cyb-Chain-GROUND"
TEMPLATE	"Cyb-Cannon-GROUND"
TEMPLATE	"Cyb-Rocket-GROUND"
TEMPLATE	"Cyb-Flamer-GROUND"			
TEMPLATE	"Cyb-RotMG-GROUND"		

//VTOLS
TEMPLATE	"CO-M-Bomb1-VTOL"
TEMPLATE	"CO-L-Rocket-LtA-T-VTOL"
TEMPLATE	"CO-M-Bomb2-VTOL"					
TEMPLATE	"CO-L-RotMG-VTOL"					
TEMPLATE	"CO-M-HVAT-V"			//new

//Sensor Towers
TEMPLATE	"Sys-SensoTower02"
TEMPLATE	"Sys-CB-Tower01"
TEMPLATE	"Sys-VTOL-RadarTower01"		
TEMPLATE	"Sys-VTOL-CB-Tower01"		

//Defenses
TEMPLATE	"CO-Tower-MG3"
TEMPLATE	"CO-Tower-LtATRkt"
TEMPLATE	"CO-Tower-MdCan"
TEMPLATE	"Emplacement-MortarPit02"
TEMPLATE	"CO-Tower-HvATRkt"
TEMPLATE	"CO-Tower-HvFlame"			
TEMPLATE	"CO-WallTower-HvCan"			
TEMPLATE	"Emplacement-Howitzer105"			
TEMPLATE	"CO-AASite-QuadMg1"
TEMPLATE	"CO-Tower-HVCan"						
TEMPLATE	"CO-Tower-RotMG"						
TEMPLATE	"CO-AASite-QuadRotMg"
TEMPLATE	"CO-AASite-Flak1"			//new
*/

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/
coordsX		[0]	int		5056		//South (backdoor)
coordsY		[0]	int		7616
coordsX		[1]	int		2240		//West of base
coordsY		[1]	int		5440
coordsX		[2]	int		3648		//North Door
coordsY		[2]	int		1984
coordsX		[3]	int		6848		//East door
coordsY		[3]	int		6464

coordsX		[4]	int		4800		//NASDA
coordsY		[4]	int		1216

coordsX		[5]	int		960		//Player LZ
coordsY		[5]	int		960
coordsX		[6]	int		4160		//North of base
coordsY		[6]	int		1216

/*reuse
coordsX		[7]	int		2496		//hillgroup waypoint3
coordsY		[7]	int		7488
coordsX		[8]	int		1728		//hillgroup waypoint4
coordsY		[8]	int		7744
*/


/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		3904		//Group 0
regionsY1	[0]	int		3392
regionsX2	[0]	int		4288
regionsY2	[0]	int		3648

regionsX1	[1]	int		4416		//Group 1
regionsY1	[1]	int		6336
regionsX2	[1]	int		5056
regionsY2	[1]	int		6848

regionsX1	[2]	int		1000		//base around NASDA
regionsY1	[2]	int		1000
regionsX2	[2]	int		7000
regionsY2	[2]	int		7000

regionsX1	[3]	int		64		//Player's LZ
regionsY1	[3]	int		64
regionsX2	[3]	int		2048
regionsY2	[3]	int		2048	

/*reuse
regionsX1	[4]	int		704		//Sensor Group 2
regionsY1	[4]	int		9152
regionsX2	[4]	int		960
regionsY2	[4]	int		9920

regionsX1	[5]	int		1728		//Sensor Group 3
regionsY1	[5]	int		1856
regionsX2	[5]	int		1984
regionsY2	[5]	int		2368	

regionsX1	[6]	int		1856		//Cyborg Group 4 (SOUTH)
regionsY1	[6]	int		6080
regionsX2	[6]	int		2240
regionsY2	[6]	int		6464

regionsX1	[7]	int		4032		//trigger zone 7 (NE Base trigger)
regionsY1	[7]	int		64
regionsX2	[7]	int		8128
regionsY2	[7]	int		4160	

regionsX1	[8]	int		64		//trigger zone 8 (North of next trigger zone)
regionsY1	[8]	int		4544
regionsX2	[8]	int		8000
regionsY2	[8]	int		5824
	
regionsX1	[9]	int		64		//trigger zone 9 (North of SOUTH base)
regionsY1	[9]	int		8128
regionsX2	[9]	int		8000
regionsY2	[9]	int		10048	

regionsX1	[10]	int		64		//players LZ to get back to
regionsY1	[10]	int		64
regionsX2	[10]	int		1400
regionsY2	[10]	int		1400	

regionsX1	[11]	int		1728		//region group 5 (radar defenders)
regionsY1	[11]	int		320
regionsX2	[11]	int		6208
regionsY2	[11]	int		3904	
regionsX1	[12]	int		4032		//protect region group 5 (radar object)
regionsY1	[12]	int		2368
regionsX2	[12]	int		4800
regionsY2	[12]	int		3136	
*/

/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
/*reuse
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//sect15
sectorsX1	[0]	int		10432
sectorsY1	[0]	int		12736
sectorsX2	[0]	int		14272
sectorsY2	[0]	int		15552
//sect21
sectorsX1	[1]	int		8896
sectorsY1	[1]	int		13760
sectorsX2	[1]	int		10304
sectorsY2	[1]	int		15040
//sect20
sectorsX1	[2]	int		6336
sectorsY1	[2]	int		13760
sectorsX2	[2]	int		8768
sectorsY2	[2]	int		14144
//ravine entrance to 1B
//sect
sectorsX1	[3]	int		2112
sectorsY1	[3]	int		12736
sectorsX2	[3]	int		6336
sectorsY2	[3]	int		14784
//sect
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		0	//2		//MAX = 5. Must be same as number of bases listed next
/*
basePlayer	[0]	int		0		//enemy player index who owns base
baseMsg		[0]	INTMESSAGE	"C2D_BASE1"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		0		//index to regions
baseWav1	[0]	int		2		//index to baseSnd	Superior Weapons
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0
baseMsg		[1]	INTMESSAGE	"C2D_BASE2"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated
*/

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		4	//group MAX = 10

//Group 0 (tank attack group)
grpType		[0]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (NP)
grpRegion		[0]	int		0		//index in regions array
grpTimeGo		[0]	int		3		//30s time trigger (always make >= 0 for defence forces)
grpRegionGo		[0]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		-1		//morale = 25%
grpLeadership	[0]	int		0		//leadership value = 75%
grpRetreatXY	[0]	int		0		//retreat (index in coords array) base2 assembly
grpPosStart		[0]	int		6		//index in coords array (depends on grpType)
grpPosMin		[0]	int		4		//Minimum index in coords array
grpPosMax		[0]	int		6		//Maximum index in coords array
grpPosStep		[0]	int		-1		//Step increase for next 'waypoint'
grpPosType		[0]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		6		//ideal size. If less than this factory will reinforce

//Group 1 (tank & cyborg defence group)
grpType		[1]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (NP)
grpRegion		[1]	int		1		//index in regions array
grpTimeGo		[1]	int		4		//40s time trigger (always make >= 0 for defence forces)
grpRegionGo		[1]	int		2		//base to protect
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		-1		//pretty timid! morale = 25%
grpLeadership	[1]	int		0		//leadership value = 0%
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base 2 assembly
grpPosStart		[1]	int		0		//index in coords array (depends on grpType)
grpPosMin		[1]	int		0		//Minimum index in coords array
grpPosMax		[1]	int		4		//Maximum index in coords array
grpPosStep		[1]	int		1		//Step increase for next 'waypoint'
grpPosType		[1]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[1]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		8		//ideal size. If less than this factory will reinforce

//Cyborg Group 2
grpType		[2]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (NP)
grpRegion		[2]	int		-1		//index in regions array
grpTimeGo		[2]	int		12		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		-1		//morale = 50%
grpLeadership	[2]	int		0		//leadership value = 75%
grpRetreatXY	[2]	int		0		//retreat (index in coords array) base2 assembly
grpPosStart		[2]	int		0		//index in coords array (depends on grpType)
grpPosMin		[2]	int		0		//Minimum index in coords array
grpPosMax		[2]	int		5		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		12		//ideal size. If less than this factory will reinforce

//Any Factory left over!
grpType		[3]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[3]	int		0		//player number (NP)
grpRegion		[3]	int		-1		//index in regions array
grpTimeGo		[3]	int		0		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[3]	int		-1		//index in regions array as protect region
grpWhoGo		[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[3]	int		-1		//morale = 50%
grpLeadership	[3]	int		0		//leadership value = 75%
grpRetreatXY	[3]	int		0		//retreat (index in coords array) base2 assembly
grpPosStart		[3]	int		2		//-1 = no waypoints. index in coords array (depends on grpType)
grpPosMin		[3]	int		2		//Minimum index in coords array
grpPosMax		[3]	int		4		//Maximum index in coords array
grpPosStep		[3]	int		1		//Step increase for next 'waypoint'
grpPosType		[3]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[3]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		20		//ideal size. If less than this factory will reinforce

/* Factories */
numFactories		int		2	//7		//MAX = 11

//South Cyborg Factory 1
factID		[0]	int		0		//index to structures
factAssXY		[0]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[0]	int		2		//delay before starting production in 10s
factRegionGo	[0]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		15		//Cyborg templates
factTempMax		[0]	int		18		//
factEvery		[0]	int		6		//1mins to produce again

//Heavy Factory 3
factID		[1]	int		1	//5		//index to structures
factAssXY		[1]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[1]	int		2		//delay before starting production in 10s
factRegionGo	[1]	int		8		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[1]	int		0	//8		//Vehicle templates
factTempMax		[1]	int		3	//10		//Repair
factEvery		[1]	int		12		//2min to produce again


/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports
LZComp		SOUND		"pcv445.ogg"
LZClear		SOUND		"lz-clear.ogg"

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated

/* NEW STUFF for trucks */
trucksOn		BOOL			TRUE		//switch for using trucks (won't work without it!)
/* Defence Type Structures for any enemy to build */
numDefences		int			5	//MAX = 5
defences[0]		STRUCTURESTAT	"AASite-QuadBof"
defences[1]		STRUCTURESTAT	"PillBox3"
defences[2]		STRUCTURESTAT	"CO-Tower-HVCan"
defences[3]		STRUCTURESTAT	"CO-Tower-RotMG"
defences[4]		STRUCTURESTAT	"CO-Tower-HvFlame"

maxDefence		int			3		//ideal number of defences to build
/* structures to defend */
numToDefend		int			5	//MAX = 5
toDefend[0]		STRUCTURESTAT	"A0ResearchFacility"
toDefend[1]		STRUCTURESTAT	"A0CommandCentreCO"
toDefend[2]		STRUCTURESTAT	"A0PowerGenerator"
toDefend[3]		STRUCTURESTAT	"A0LightFactory"
toDefend[4]		STRUCTURESTAT	"UplinkCentre"

/* extra Globals */
oilRes		FEATURESTAT		"OilResource"
truckRange		int			1024	//range for truck to check for defendable structures
defRange		int			512	//range for defences to be for defendable structures
/* end of NEW STUFF */

/* NEW STUFF FOR THREAT ASSESSMENT */
//this only works on groups with Morale Values
//if not declared just won't do anything!!
threatLight		int			2	//value for light vehicles
threatMedium	int			4	//value for medium vehicles
threatHeavy		int			8	//value for large vehicles
threatRange		int			512	//range to check for enemy and player threats
/* end of NEW STUFF */

/* NEW STUFF fro RETURN TO LZ type victory condition blip and audio */
retLZFlag		BOOL		TRUE				//must be set true to activate
retLZSnd		SOUND		"pcv427.ogg"		//for victory condition of get all player stuff to region
retLZBlip		INTMESSAGE	"C2D_LZ"			//Blip for LZ
/* end of NEW STUFF */

}
