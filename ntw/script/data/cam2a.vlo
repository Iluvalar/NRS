//Generic VLO file template for start/expand levels

//Cam2a.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"SUB_2_1S"	//points to next level

/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		2		// Collective
alliancePlayer	int		0		//ally player with self (could be a different player number
allianceEnemy[0]	int	2		//ally enemy with self (could be a different player number
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE

/* Starting Enemy Power */
power[0]	int		10000		//starting power values for each enemy listed above
//power[1]	int		1000

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		5
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		200
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		5
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		5
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		1
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		1

/* Initialisation */
centreX		int		11200	//12416	//starting view centre (in world units)
centreY		int		12864	//12416
scrollX1	int		64	//scroll limits (in tile units)
scrollY1	int		64
scrollX2	int		128
scrollY2	int		128
zoomLevel	int		1	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		3	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		87	//coords of Alpha's LZs in tile units
LZY[0]		int		100	
LZX[1]		int		87	//97	//coords of Beta's LZ in tile units
LZY[1]		int		100	//97	//no longer req'd
LZX[2]		int		117	//coords of Collective's LZ in tile units
LZY[2]		int		116

reinfOff		BOOL		TRUE	//don't set reinforcements (done in another script)
ReinforceTime	INT		-1	//4200	//1200	//-1 for no reinforcements in 10ths of secs
timeLimit		INT		36000	//-1	//-1 for no time limit (needs to be done if previous misison had a time limit!)

/* Transport exit and entry */
transX[0]	int		87
transY[0]	int		126
transX[1]	int		87
transY[1]	int		126

//The Collectives entry/exit for Transport
entryX[0]	int		126	//define transport entry exit for each enemy!
entryY[0]	int		100	//unnecessary if no enemy transports (defaults 0)
exitX	[0]	int		126	//leave as 0 if don't want a transport adding for this enemy
exitY	[0]	int		70

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		25
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade03"	
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials03"	
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade03"	
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade03"	
startTech	[0]	[4]	RESEARCHSTAT	"R-Vehicle-Engine03"		
startTech	[0]	[5]	RESEARCHSTAT	"R-Vehicle-Metals03"	
startTech	[0]	[6]	RESEARCHSTAT	"R-Cyborg-Metals03"	
startTech	[0]	[7]	RESEARCHSTAT	"R-Vehicle-Armor-Heat01"	
startTech	[0]	[8]	RESEARCHSTAT	"R-Cyborg-Armor-Heat01"	
startTech	[0]	[9]	RESEARCHSTAT	"R-Cyborg-Armor-Heat01"	//"R-Wpn-Cannon-Accuracy01"	
startTech	[0]	[10]	RESEARCHSTAT	"R-Wpn-Cannon-Damage03"	
startTech	[0]	[11]	RESEARCHSTAT	"R-Wpn-Cannon-ROF01"	
startTech	[0]	[12]	RESEARCHSTAT	"R-Wpn-Flamer-Damage03"	
startTech	[0]	[13]	RESEARCHSTAT	"R-Wpn-Flamer-ROF01"	
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-MG-Damage04"	
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-MG-ROF02"	//R-Wpn-MG-ROF01"
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-MG-ROF02"	//"R-Wpn-Mortar-Acc01"	
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Mortar-Damage03"	
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-Mortar-ROF01"	
startTech	[0]	[19]	RESEARCHSTAT	"R-Wpn-Rocket-Accuracy02"	
startTech	[0]	[20]	RESEARCHSTAT	"R-Wpn-Rocket-Damage03"	
startTech	[0]	[21]	RESEARCHSTAT	"R-Wpn-Rocket-ROF03"	
startTech	[0]	[22]	RESEARCHSTAT	"R-Wpn-RocketSlow-Accuracy03"	
startTech	[0]	[23]	RESEARCHSTAT	"R-Wpn-RocketSlow-Damage03"	
startTech	[0]	[24]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"	

/* Videos */
numVideos       int     1
video[0]        TEXTSTRING      "CAM2_BEG_RPL"
videoText[0]    TEXTSTRING      "CAM2_BEG_TXT"

/* Briefings */
numBriefs	int		1	//MAX 2. Needs to be same as the number of briefings given next
//brief[0]	INTMESSAGE	"CAM2_INT"
//brief[1]	INTMESSAGE	"CAM2_INT2"
brief[0]	INTMESSAGE	"MB2A_MSG"
briefVal[0]	int		2	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"

/* Objectives */
numObjectives	int		0	//MAX 3. Needs to be the same as the number of objective blips given next
//objective[0]	INTMESSAGE	"C2A_BASE1"
//objectiveX[0]	int		13000	//doesn't use index to array, use world coords
//objectiveY[0]	int		9000

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		-1	//number of bases to destroy (uses base[0] to base[#])

/* might use these later if necessary
victory[4]	int		-1	//kill all UNITS belonging to enemy # index
victory[5]	int		-1	//kill all STRUCTURES belonging to enemy # index
victory[6]	int		-1	//REGION index to check for defences built
victory[7]	int		-1	//# of EXTRA defences to build in REGION
*/

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//numFail	int		0	//number required to be met (usually one if used!)
//only one of these has to be met
//Use -1 for False, # for True (often an index to check!)

fail	[0]	int		-1	//0	//group # index all got to REGION
fail	[1]	int		-1	//2	//REGION index for above (these count as one condition!)

/* might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????
*/

/* Artifacts */
victoryArt	int		3	//number of artifacts required for victory (must be <= numArt)
numArt		int		3	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
artType	[0]	int		1				//get from STRUCTURE
artVal	[0]	int		0				//get from CO Command Centre
artX	[0]	int		12864
artY	[0]	int		9664
artComp	[0]	RESEARCHSTAT	"R-Sys-Engineering02"

artType	[1]	int		1
artVal	[1]	int		1				//from MG pillbox
artX	[1]	int		14912	//14656
artY	[1]	int		14528	//14784
artComp	[1]	RESEARCHSTAT	"R-Wpn-MG-ROF02"

artType	[2]	int		1
artVal	[2]	int		2				//get this from CB tower
artX	[2]	int		12608
artY	[2]	int		9408
artComp	[2]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"

/* unused
artType	[3]	int		1
artVal	[3]	int		2				//get this from base 2 factory
artX	[3]	int		5696
artY	[3]	int		1856
artComp	[3]	RESEARCHSTAT	"CAM2RESEARCH"	//"R-Sys-Engineering01"

artType	[4]	int		1
artVal	[4]	int		3				//get this from base 3 factory
artX	[4]	int		4928
artY	[4]	int		6464
artComp	[4]	RESEARCHSTAT	"CAM2RESEARCH"

artType	[5]	int		1				//get this from bunker
artVal	[5]	int		4				
artX	[5]	int		3136
artY	[5]	int		3904
artComp	[5]	RESEARCHSTAT	"CAM2RESEARCH"		//"R-Wpn-MG-Damage01"
*/

/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/
structures	[0]	STRUCTURE	1529		//CO Command Centre (gives art0)
structures	[1]	STRUCTURE	4551		//MG pillbox (gives art1)
structures	[2]	STRUCTURE	4576		//CB Tower (gives art2)
/* reuse
structures	[3]	STRUCTURE	623		//Base 3 Factory
structures	[4]	STRUCTURE	666		//Bunker
*/

/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
droids		[0]	DROID		4132		//Construction droid
droids		[1]	DROID		4129		//sensor droid in group 2
droids		[2]	DROID		4132		//Construction droid (put after sensors if they're to reinforce!!)

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/

/* OLD TEMPLATES
//Transport Scouts
templates	[0]	TEMPLATE	"Cyb-Chain-GROUND"
templates	[1]	TEMPLATE	"CO-L-POD-Wheels"
templates	[2]	TEMPLATE	"CO-L-HMG-Wheels"
templates	[3]	TEMPLATE	"CO-M-Sensor-Half-Track"
//Edge Factory1
templates	[4]	TEMPLATE	"CO-M-MedCan-Tracks"
templates	[5]	TEMPLATE	"Cyb-Rocket-GROUND"
templates	[6]	TEMPLATE	"CO-M-MedCan-Tracks"
templates	[7]	TEMPLATE	"CO-H-HvyCan-Tracks"
//Transport Artillery
templates	[8]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[9]	TEMPLATE	"CO-M-Mortar1-Halftrack"
templates	[10]	TEMPLATE	"CO-M-HvMortar-Halftrack"
templates	[11]	TEMPLATE	"CO-M-MedCan-Tracks"
*/
//Transport Scouts
templates	[0]	TEMPLATE	"Cyb-Chain-GROUND"
templates	[1]	TEMPLATE	"CO-M-HMG-T"
templates	[2]	TEMPLATE	"Cyb-Cannon-GROUND"
templates	[3]	TEMPLATE	"CO-M-Sensor-T"
//Edge Factory1
templates	[4]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[5]	TEMPLATE	"Cyb-Rocket-GROUND"
templates	[6]	TEMPLATE	"Cyb-Chain-GROUND"
templates	[7]	TEMPLATE	"CO-M-MedCan-Tracks"
//Transport Artillery
templates	[8]	TEMPLATE	"CO-H-HvyCan-Tracks"
templates	[9]	TEMPLATE	"Cyb-Rocket-GROUND"
templates	[10]	TEMPLATE	"Cyb-Cannon-GROUND"
templates	[11]	TEMPLATE	"CO-M-MedCan-Tracks"

/*reuse
templates	[12]	TEMPLATE	"CO-L-MG2-VTOL"
templates	[13]	TEMPLATE	"CO-M-Bomb1-VTOL"

//Cyborg Templates (SHARED)
templates	[14]	TEMPLATE	"Cyb-Chain-GROUND"
templates	[15]	TEMPLATE	"Cyb-Cannon-GROUND"
templates	[16]	TEMPLATE	"Cyb-Rocket-GROUND"
*/

/* Templates available for this level */
/*
//Trucks
TEMPLATE	"CO-M-Con-Htrack" 
//Repairs
TEMPLATE	"CO-M-Repair-HalfTrack"
//Sensors
TEMPLATE	"CO-M-Sensor-Half-Track"
TEMPLATE	"CO-M-CBS-Halftrack"
TEMPLATE	"CO-M-Vstrike-Halftrack"
TEMPLATE	"CO-M-VTOLCBS-Halftrack"
//Commanders
TEMPLATE	"CO-M-Command-Track"
//Tanks
TEMPLATE	"CO-L-HMG-Wheels"
TEMPLATE	"CO-L-POD-Wheels"
TEMPLATE	"CO-M-MedCan-Tracks"
TEMPLATE	"CO-H-HvyCan-Tracks"
TEMPLATE	"CO-M-Mortar1-Halftrack"
TEMPLATE	"CO-M-HvMortar-Halftrack"
//Cyborgs
TEMPLATE	"Cyb-Chain-GROUND"
TEMPLATE	"Cyb-Cannon-GROUND"
TEMPLATE	"Cyb-Rocket-GROUND"
//VTOLS
TEMPLATE	"CO-L-Rocket-VTOL-Pod-VTOL"
TEMPLATE	"CO-L-MG2-VTOL"
TEMPLATE	"CO-M-Bomb1-VTOL"
*/

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/
coordsX		[0]	int		12096		//phantom factory 0 assembly (edge of map) TANKS
coordsY		[0]	int		8256	//very edge!!	//8384

coordsX		[1]	int		12224		//waypoint 1 for TANKS (north of player's base)
coordsY		[1]	int		10560

coordsX		[2]	int		12480		//player's other LZ	//12224		//waypoint 1 for TANKS (north of player's base)
coordsY		[2]	int		12480						//10560

coordsX		[3]	int		11200		//player's LZ	//12096		//waypoint 2 for TANKS (player's base)
coordsY		[3]	int		12864					//12608


coordsX		[4]	int		14784		//retreat for Collective Transport Units (near LZ)
coordsY		[4]	int		15424

/* reuse
coordsX		[5]	int		2624		//hillgroup waypoint1
coordsY		[5]	int		5952
coordsX		[6]	int		2752		//hillgroup waypoint2
coordsY		[6]	int		6720
coordsX		[7]	int		2496		//hillgroup waypoint3
coordsY		[7]	int		7488
coordsX		[8]	int		1728		//hillgroup waypoint4
coordsY		[8]	int		7744
*/


/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		12352	//12608	//12096		//enemy base1 blip
regionsY1	[0]	int		9152	//9280	//8640
regionsX2	[0]	int		13376	//13376	//13376
regionsY2	[0]	int		10304	//10176	//9664

regionsX1	[1]	int		10048	//13504		//enemy base2 blip (mortar pits)
regionsY1	[1]	int		9280	//10176
regionsX2	[1]	int		11712	//14528
regionsY2	[1]	int		10432	//10944
	
regionsX1	[2]	int		11968		//edge map group (start)
regionsY1	[2]	int		8640
regionsX2	[2]	int		12352
regionsY2	[2]	int		10176

regionsX1	[3]	int		9664		//IDF group
regionsY1	[3]	int		9792
regionsX2	[3]	int		10048
regionsY2	[3]	int		10304
	
regionsX1	[4]	int		10176		//Sensor group
regionsY1	[4]	int		10944
regionsX2	[4]	int		10560
regionsY2	[4]	int		11328

/* reuse
regionsX1	[5]	int		3904		//base 3 Factory start
regionsY1	[5]	int		2496		//crossed by radar tower
regionsX2	[5]	int		5312
regionsY2	[5]	int		4288	


regionsX1	[6]	int		704		//region group 0 (along valley)
regionsY1	[6]	int		4544
regionsX2	[6]	int		1728		//include guys on hill!
regionsY2	[6]	int		4800	
regionsX1	[7]	int		576		//region group 1
regionsY1	[7]	int		4032
regionsX2	[7]	int		1728
regionsY2	[7]	int		4543	
regionsX1	[8]	int		576		//region group 2
regionsY1	[8]	int		3136
regionsX2	[8]	int		1216
regionsY2	[8]	int		4032	
regionsX1	[9]	int		576		//region group 3
regionsY1	[9]	int		1728
regionsX2	[9]	int		1600
regionsY2	[9]	int		4032	
regionsX1	[10]	int		704		//region group 4
regionsY1	[10]	int		704
regionsX2	[10]	int		2112
regionsY2	[10]	int		1728	

regionsX1	[11]	int		1728		//region group 5 (radar defenders)
regionsY1	[11]	int		320
regionsX2	[11]	int		6208
regionsY2	[11]	int		3904	
regionsX1	[12]	int		4032		//protect region group 5 (radar object)
regionsY1	[12]	int		2368
regionsX2	[12]	int		4800
regionsY2	[12]	int		3136	
*/

/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
//MAX = 20
//top third of 2A
sectorsX1	[0]	int		9792
sectorsY1	[0]	int		9664
sectorsX2	[0]	int		15936
sectorsY2	[0]	int		11456
//middle third of 2A
sectorsX1	[1]	int		9792
sectorsY1	[1]	int		9664
sectorsX2	[1]	int		15936
sectorsY2	[1]	int		11456
//bottom third of 2A
sectorsX1	[2]	int		9792
sectorsY1	[2]	int		14016
sectorsX2	[2]	int		15936
sectorsY2	[2]	int		15424
/*reuse
//ravine entrance to 1B
//sect
sectorsX1	[3]	int		2112
sectorsY1	[3]	int		12736
sectorsX2	[3]	int		6336
sectorsY2	[3]	int		14784
//sect
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		2		//MAX = 5. Must be same as number of bases listed next

basePlayer		[0]	int		0		//enemy[0] = 2 COLLECTIVE
baseMsg		[0]	INTMESSAGE	"C2A_BASE1"	//enemy base blip message (prox.txt)
baseRegion		[0]	int		0		//index to regions
baseWav1		[0]	int		0		//index to baseSnd	enemy base detected
baseWav2		[0]	int		3		//index to baseSnd	Eradicated

basePlayer		[1]	int		0		//enemy[0] = 2 COLLECTIVE
baseMsg		[1]	INTMESSAGE	"C2A_BASE2"	//enemy base blip message (prox.txt)
baseRegion		[1]	int		1		//index to regions
baseWav1		[1]	int		0		//index to baseSnd	enemy detected
baseWav2		[1]	int		3		//index to baseSnd	Eradicated

//basePlayer	[2]	int		7
//baseMsg		[2]	INTMESSAGE	"FAST_BASE3"
//baseRegion	[2]	int		2
//baseWav1	[2]	int		2		//index to baseSnd	Superior Weapons
//baseWav2	[2]	int		3		//index to baseSnd	Eradicated

//basePlayer	[3]	int		7		//do radar as a base
//baseMsg		[3]	INTMESSAGE	"FAST_BASE4"
//baseRegion	[3]	int		12
//baseWav1	[3]	int		1		//index to baseSnd	Threat to project
//baseWav2	[3]	int		-1		//-1 = no sound

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		5	//group MAX = 10
/* ambush version */
//TANK GROUP on North edge of map
grpType		[0]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (collective)
grpRegion		[0]	int		2		//starting group (gets reinforced with edge stuff)
grpTimeGo		[0]	int		1		//10s. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		-1		//index in regions array as trigger
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		-1		//don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		1		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		1		//Minimum index in coords array
grpPosMax		[0]	int		3		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		99		//ideal size. If less than this factory will reinforce

/*
//TANK GROUP on North edge of map
grpType		[0]	int		3		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (collective)
grpRegion		[0]	int		2		//starting group (gets reinforced with edge stuff)
grpTimeGo		[0]	int		1		//10s. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		-1		//index in regions array as trigger
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		-1		//don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		1		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		0		//Minimum index in coords array
grpPosMax		[0]	int		2		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		10		//ideal size. If less than this factory will reinforce
*/

//IDF group
grpType		[1]	int		-1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (Collective)
grpRegion		[1]	int		3		//region
grpTimeGo		[1]	int		-1		//sensor will move this group
grpRegionGo		[1]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		-1	//50		//morale = 50%
grpLeadership	[1]	int		0	//50		//leadership value
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart		[1]	int		-1		//don't use
grpPosMin		[1]	int		0		//
grpPosMax		[1]	int		0		//
grpPosStep		[1]	int		0		//
grpPosType		[1]	int		0		//
grpFactory		[1]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		0		//ideal size. If less than this factory will reinforce

//Now a transport group (artillery)
grpType		[2]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (Collective)
grpRegion		[2]	int		-1		//no region
grpTimeGo		[2]	int		2		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		80		//morale = 50%
grpLeadership	[2]	int		50		//leadership value
grpRetreatXY	[2]	int		4		//retreat (index in coords array) North edge of map
grpPosStart		[2]	int		3		//index in coords array
grpPosMin		[2]	int		1		//Minimum index in coords array
grpPosMax		[2]	int		3		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		8		//ideal size. If less than this factory will reinforce

/* ambush version */
//sensor group
grpType		[3]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[3]	int		0		//player number (NP)
grpRegion		[3]	int		4		//index in regions array
grpTimeGo		[3]	int		1		//10s time trigger (always make >= 0 for defence forces)
grpRegionGo		[3]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[3]	int		90		//pretty timid! morale = 25%
grpLeadership	[3]	int		50		//leadership value = 0%
grpRetreatXY	[3]	int		0		//retreat (index in coords array) base 2 assembly
grpPosStart		[3]	int		2		//index in coords array (depends on grpType)
grpPosMin		[3]	int		1		//Minimum index in coords array
grpPosMax		[3]	int		3		//Maximum index in coords array
grpPosStep		[3]	int		1		//Step increase for next 'waypoint'
grpPosType		[3]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[3]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		0		//ideal size. If less than this factory will reinforce

/* scout group version
//sensor group
grpType		[3]	int		2		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[3]	int		0		//player number (NP)
grpRegion		[3]	int		4		//index in regions array
grpTimeGo		[3]	int		1		//10s time trigger (always make >= 0 for defence forces)
grpRegionGo		[3]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[3]	int		90		//pretty timid! morale = 25%
grpLeadership	[3]	int		50		//leadership value = 0%
grpRetreatXY	[3]	int		1		//retreat (index in sector array) base 2 assembly
grpPosStart		[3]	int		1		//index in coords array (depends on grpType)
grpPosMin		[3]	int		0		//Minimum index in sectors array
grpPosMax		[3]	int		2		//Maximum index in sectors array
grpPosStep		[3]	int		1		//Step increase for next 'waypoint'
grpPosType		[3]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[3]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		6		//ideal size. If less than this factory will reinforce
*/

//Now a transport group (scouts)
grpType		[4]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[4]	int		0		//player number (Collective)
grpRegion		[4]	int		-1		//no region
grpTimeGo		[4]	int		2		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[4]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[4]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[4]	int		90		//morale = 20%
grpLeadership	[4]	int		50		//leadership value
grpRetreatXY	[4]	int		4		//retreat (index in coords array) North edge of map
grpPosStart		[4]	int		3		//index in coords array
grpPosMin		[4]	int		1		//Minimum index in coords array
grpPosMax		[4]	int		3		//Maximum index in coords array
grpPosStep		[4]	int		1		//Step increase for next 'waypoint'
grpPosType		[4]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[4]	int		2		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[4]	int		8		//ideal size. If less than this factory will reinforce

/* Factories */
numFactories		int		3		//MAX = 10
//Tank Factory
factID		[0]	int		-1		//plonked on map (phantom factories)
factAssXY		[0]	int		0		//index to assembly point. -1 for don't set
factTimeGo		[0]	int		30	//6		//5min before start
factRegionGo	[0]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		4		//index to starting template
factTempMax		[0]	int		7		//index to maximum template
factEvery		[0]	int		42		//7 min .Time in 10s for factory to try to produce again

//Transport Factory (Artillery)
factID		[1]	int		-2		//transport factory (phantom factories)
factAssXY		[1]	int		2		//index to LZ
factTimeGo		[1]	int		42		//7 minutes	//24		//4mins before start
factRegionGo	[1]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[1]	int		8		//tanks and stuff
factTempMax		[1]	int		11		//
factEvery		[1]	int		60		//10 mins .Time in 10s for factory to try to produce again

//Transport Factory (Scouts)
factID		[2]	int		-2		//transport factory (phantom factories)
factAssXY		[2]	int		2		//index to LZ
factTimeGo		[2]	int		18	//3		//3mins	//12		//2mins before start
factRegionGo	[2]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[2]	int		0		//Sensors and stuff
factTempMax		[2]	int		3		//
factEvery		[2]	int		60		//10 mins .Time in 10s for factory to try to produce again


/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports
transSnd		SOUND		"pcv381.ogg"		//enemy transport landing
LZComp		SOUND		"pcv445.ogg"
LZClear		SOUND		"lz-clear.ogg"

LZRange		int		512	//4 tiles (default = 768 6 tiles if not specified)

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated



/* NEW STUFF for trucks */
trucksOn		BOOL			TRUE		//switch for using trucks (won't work without it!)
/* Defence Type Structures for any enemy to build */
numDefences		int			3	//MAX = 5
defences[0]		STRUCTURESTAT	"CO-Tower-MG3"
defences[1]		STRUCTURESTAT	"CO-Tower-LtATRkt"
defences[2]		STRUCTURESTAT	"CO-Tower-MdCan"
maxDefence		int			3		//ideal number of defences to build
/* structures to defend */
numToDefend		int			2	//MAX = 5
toDefend[0]		STRUCTURESTAT	"A0ResourceExtractor"
toDefend[1]		STRUCTURESTAT	"A0CommandCentreCO" //"A0PowerGenerator"
/* extra Globals */
oilRes		FEATURESTAT		"OilResource"
truckRange		int			1024	//range for truck to check for defendable structures
defRange		int			512	//range for defences to be for defendable structures
/* end of NEW STUFF */

/* NEW STUFF FOR THREAT ASSESSMENT */
//this only works on groups with Morale Values
//if not declared just won't do anything!!
threatLight		int			2	//value for light vehicles
threatMedium	int			4	//value for medium vehicles
threatHeavy		int			8	//value for large vehicles
threatRange		int			512	//range to check for enemy and player threats
/* end of NEW STUFF */


}
