//Generic VLO file template for start/expand levels

//Cam1-D.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"CAM_1END"	//points to next level

/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		1
//enemy[1]	int		1
alliancePlayer	int	0		//ally player with self (could be a different player number
allianceEnemy[0]	int	1		//ally enemy with self (could be a different player number
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE
entryX[0]	int		1		//define transport entry exit for each enemy!
entryY[0]	int		1		//unnecessary if no enemy transports (defaults 0)
exitX	[0]	int		1		//leave as 0 if don't want a transport adding for this enemy
exitY	[0]	int		1

/* Starting Enemy Power */
power[0]	int		5000		//starting power values for each enemy listed above
//power[1]	int		1000

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		0
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		0
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		0
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		0
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		0
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		0

/* Initialisation */
centreX		int		704	//starting view centre (in world units)
centreY		int		15552
scrollX1	int		0	//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		80
scrollY2	int		128
zoomLevel	int		0	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		2	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		5	//coords of LZs in tile units
LZY[0]		int		121
LZX[1]		int		58	//coords of NP LZ
LZY[1]		int		46

//special, last LZ is for next map!! (don't count in numLZ)
LZX[2]		int		11	//coords of Campaign Map LZ in tile units
LZY[2]		int		52

/* Transport exit and entry */
transX[0]	int		1	//entry
transY[0]	int		110
transX[1]	int		6	//exit
transY[1]	int		126

ReinforceTime	INT		1200	// (1 minute) number of seconds*10 for transport, -1 for no reinforcements

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		21
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade03"
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials03"
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade03"
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade03"
startTech	[0]	[4]	RESEARCHSTAT	"R-Vehicle-Engine03"
startTech	[0]	[5]	RESEARCHSTAT	"R-Vehicle-Metals03"
startTech	[0]	[6]	RESEARCHSTAT	"R-Cyborg-Metals03"
startTech	[0]	[7]	RESEARCHSTAT	"R-Wpn-Cannon-Accuracy01"
startTech	[0]	[8]	RESEARCHSTAT	"R-Wpn-Cannon-Damage03"
startTech	[0]	[9]	RESEARCHSTAT	"R-Wpn-Flamer-Damage03"
startTech	[0]	[10]	RESEARCHSTAT	"R-Wpn-Flamer-ROF01"
startTech	[0]	[11]	RESEARCHSTAT	"R-Wpn-MG-Damage04"
startTech	[0]	[12]	RESEARCHSTAT	"R-Wpn-MG-ROF01"
startTech	[0]	[13]	RESEARCHSTAT	"R-Wpn-Mortar-Acc01"
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-Mortar-Damage03"
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Rocket-Accuracy01"
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Rocket-Damage03"
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Rocket-ROF03"
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-RocketSlow-Accuracy03"
startTech	[0]	[19]	RESEARCHSTAT	"R-Wpn-RocketSlow-Damage03"
startTech	[0]	[20]	RESEARCHSTAT	"R-Struc-RprFac-Upgrade03"


/* Briefings */
numBriefs	int		1	//MAX 2. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB1D_MSG2"
briefVal[0]	int		2	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"

/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next
objective[0]	INTMESSAGE	"C1D_OBJ1"
objectiveX[0]	int		8512	//doesn't use index to array, use world coords
objectiveY[0]	int		2112

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		-1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		3	//kill all three bases! (number of bases to destroy (uses base[0] to base[#]))

/* might use these later if necessary
victory[4]	int		-1	//kill all UNITS belonging to enemy # index
victory[5]	int		-1	//kill all STRUCTURES belonging to enemy # index
victory[6]	int		-1	//REGION index to check for defences built
victory[7]	int		-1	//# of EXTRA defences to build in REGION
*/

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//numFail	int		0	//number required to be met (usually one if used!)
//only one of these has to be met
//Use -1 for False, # for True (often an index to check!)

fail	[0]	int		-1	//0	//group # index all got to REGION
fail	[1]	int		-1	//2	//REGION index for above (these count as one condition!)

/* might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????
*/


/* Artifacts */
victoryArt	int		3	//number of artifacts required for victory (must be <= numArt)
numArt		int		3	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
artType	[0]	int		0				//starts on map
artVal	[0]	int		0				
artX	[0]	int		6080
artY	[0]	int		15424
artComp	[0]	RESEARCHSTAT	"R-Vehicle-Prop-Hover"

/* moved to Cam1.5
artType	[1]	int		3				//from mortar droid
artVal	[1]	int		2
artX	[1]	int		5312
artY	[1]	int		13120
artComp	[1]	RESEARCHSTAT	"R-Vehicle-Body04"	//Leopard = 02!!!??!!
*/

artType	[1]	int		1				//from 1st Factory
artVal	[1]	int		0
artX	[1]	int		4800
artY	[1]	int		2752
artComp	[1]	RESEARCHSTAT	"R-Vehicle-Metals03"

artType	[2]	int		1				//from last factory
artVal	[2]	int		2
artX	[2]	int		8256
artY	[2]	int		1984
artComp	[2]	RESEARCHSTAT	"R-Vehicle-Body12"

/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
features	[0]	FEATURE		555		//crate artifact (SE hill, hover)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/
structures	[0]	STRUCTURE	670		//Heavy Factory Mid W
structures	[1]	STRUCTURE	671		//Heavy Factory Mid E
structures	[2]	STRUCTURE	663		//Heavy Factory NE
structures	[3]	STRUCTURE	324		//Cyborg Factory NE
structures	[4]	STRUCTURE	413		//Cyborg Factory Mid W
structures	[5]	STRUCTURE	414		//Cyborg Factory Mid E

/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
droids		[0]	DROID		681		//sensor in scout1 (linked to IDF#1?)
droids		[1]	DROID		688		//sensor in scout2 (linked to IDF#2?)
//droids		[2]	DROID		692		//mortar in IDF2 (gives artifact)

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/
//NP Vehicle Templates
templates[0]	TEMPLATE	"NP-M-CON-Track"	//"ConstructionDroidNP"
templates[1]	TEMPLATE	"NP-L-Sensor-Wheels"
templates[2]	TEMPLATE	"NP-L-RocketPod-Wheels"
templates[3]	TEMPLATE	"NP-L-MRLS-Halftrack"
templates[4]	TEMPLATE	"NP-L-HMG-Halftrack"
templates[5]	TEMPLATE	"NP-L-LtAT-Halftrack"
templates[6]	TEMPLATE	"NP-M-MdCannon-Tracks"
templates[7]	TEMPLATE	"NP-M-LtMortar-Halftrack"
templates[8]	TEMPLATE	"NP-M-MdCannon-Halftrack"
templates[9]	TEMPLATE	"NP-H-MdCannon-Tracks"
templates[10]	TEMPLATE	"NP-M-BB-Halftrack"
templates[11]	TEMPLATE	"NP-H-HvyCannon-Tracks"
templates[12]	TEMPLATE	"NP-M-Sensor-Wheels"
templates[13]	TEMPLATE	"NP-M-HvyMortar-Halftrack"

//NP Cyborg Templates
templates[14]	TEMPLATE	"Cyb-Chain-GROUND"
templates[15]	TEMPLATE	"Cyb-Flamer-GROUND"
templates[16]	TEMPLATE	"Cyb-Cannon-GROUND"
//Hover Templates
templates[17]	TEMPLATE	"NP-M-MG3-Hover"
templates[18]	TEMPLATE	"NP-M-LtAT-Hover"
templates[19]	TEMPLATE	"NP-H-HvyCannon-Hover"

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/
coordsX		[0]	int		4544		//factory 0 Assembly (and general retreat point!)
coordsY		[0]	int		2368
coordsX		[1]	int		8512		//Cyborg factory 2 Assembly
coordsY		[1]	int		2240

//target coords for attack groups
coordsX		[2]	int		704		//Player's LZ
coordsY		[2]	int		15552
coordsX		[3]	int		576		//a little N of LZ
coordsY		[3]	int		14528
coordsX		[4]	int		1856		//N coast of LZ
coordsY		[4]	int		14144

coordsX		[5]	int		320		//hover defence waypoint 1
coordsY		[5]	int		8256
coordsX		[6]	int		9664		//hover defence waypoint 2
coordsY		[6]	int		10560
coordsX		[7]	int		6080		//hover defence waypoint 3
coordsY		[7]	int		704
coordsX		[8]	int		2752		//hover defence waypoint 4
coordsY		[8]	int		2368


/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		3520		//enemy base1 blip
regionsY1	[0]	int		12864
regionsX2	[0]	int		6336
regionsY2	[0]	int		15936
regionsX1	[1]	int		3392		//enemy base2 blip
regionsY1	[1]	int		1984
regionsX2	[1]	int		6080
regionsY2	[1]	int		5184
regionsX1	[2]	int		7488		//enemy base3 blip
regionsY1	[2]	int		1216
regionsX2	[2]	int		10048
regionsY2	[2]	int		3904


regionsX1	[3]	int		4032		//IDF#1 group
regionsY1	[3]	int		15168
regionsX2	[3]	int		4416
regionsY2	[3]	int		15552	
regionsX1	[4]	int		4672		//IDF#2 group
regionsY1	[4]	int		12864	
regionsX2	[4]	int		5440
regionsY2	[4]	int		13376

regionsX1	[5]	int		3136		//sensor#1 group
regionsY1	[5]	int		15168
regionsX2	[5]	int		3520
regionsY2	[5]	int		15552	
regionsX1	[6]	int		3136		//sensor#2 group
regionsY1	[6]	int		13632
regionsX2	[6]	int		3520
regionsY2	[6]	int		14016	

regionsX1	[7]	int		4288		//MRLS group
regionsY1	[7]	int		8000
regionsX2	[7]	int		5056
regionsY2	[7]	int		8640
	
regionsX1	[8]	int		5184		//cyborg#1 group
regionsY1	[8]	int		7232
regionsX2	[8]	int		5696
regionsY2	[8]	int		7744	
regionsX1	[9]	int		4928		//cyborg#2 group
regionsY1	[9]	int		6592
regionsX2	[9]	int		5440
regionsY2	[9]	int		7104

regionsX1	[10]	int		832		//Hover#1 group (Aggressive)
regionsY1	[10]	int		1216
regionsX2	[10]	int		1344
regionsY2	[10]	int		1728
regionsX1	[11]	int		3776		//Hover#2 group (defensive)
regionsY1	[11]	int		2112
regionsX2	[11]	int		4160
regionsY2	[11]	int		2624

//trigger zones
regionsX1	[12]	int		4928		//1st Tank Traps breached
regionsY1	[12]	int		12608
regionsX2	[12]	int		5952
regionsY2	[12]	int		16064	
regionsX1	[13]	int		5696		//Middle of death causeway
regionsY1	[13]	int		10432
regionsX2	[13]	int		6976
regionsY2	[13]	int		11072	

regionsX1	[14]	int		192		//Player's LZ region for victory
regionsY1	[14]	int		14016
regionsX2	[14]	int		2496
regionsY2	[14]	int		15936	

regionsX1	[15]	int		7104		//enemy's LZ region for blip
regionsY1	[15]	int		5568
regionsX2	[15]	int		7872
regionsY2	[15]	int		6464	


/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
/*reuse
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//sect15
sectorsX1	[0]	int		10432
sectorsY1	[0]	int		12736
sectorsX2	[0]	int		14272
sectorsY2	[0]	int		15552
//sect21
sectorsX1	[1]	int		8896
sectorsY1	[1]	int		13760
sectorsX2	[1]	int		10304
sectorsY2	[1]	int		15040
//sect20
sectorsX1	[2]	int		6336
sectorsY1	[2]	int		13760
sectorsX2	[2]	int		8768
sectorsY2	[2]	int		14144
//ravine entrance to 1B
//sect
sectorsX1	[3]	int		2112
sectorsY1	[3]	int		12736
sectorsX2	[3]	int		6336
sectorsY2	[3]	int		14784
//sect
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		4		//MAX = 5. Must be same as number of bases listed next
basePlayer	[0]	int		0		//enemy index number who owns base
baseMsg		[0]	INTMESSAGE	"C1D_BASE1"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		0		//index to regions
baseWav1	[0]	int		0		//index to baseSnd	enemy detected
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0		//enemy index number who owns base
baseMsg		[1]	INTMESSAGE	"C1D_BASE2"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated

basePlayer	[2]	int		0		//enemy index number who owns base
baseMsg		[2]	INTMESSAGE	"C1D_BASE3"
baseRegion	[2]	int		2
baseWav1	[2]	int		0		//index to baseSnd	enemy detected
baseWav2	[2]	int		3		//index to baseSnd	Eradicated

basePlayer	[3]	int		0		//do enmy LZ as a base
baseMsg		[3]	INTMESSAGE	"C1D_LZ2"
baseRegion	[3]	int		15
baseWav1	[3]	int		4		//index to baseSnd	Enemy LZ detected
baseWav2	[3]	int		-1		//-1 = no sound

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		10	//group MAX = 10

//IDF#1
grpType		[0]	int		-1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[0]	int		0		//index to enemy number (NP)
grpRegion	[0]	int		3		//index in regions array
grpTimeGo	[0]	int		0		//never triggered (stay!)
grpRegionGo	[0]	int		-1		//index in regions array as trigger
grpWhoGo	[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale	[0]	int		-1		//-1 don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 0 assembly
grpPosStart	[0]	int		-1		//No waypoints
grpPosMin	[0]	int		-1		//Minimum index in coords array
grpPosMax	[0]	int		-1		//Maximum index in coords array
grpPosStep	[0]	int		1		//Step increase for next 'waypoint'
grpPosType	[0]	int		0		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[0]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		0		//ideal size. If less than this factory will reinforce
//IDF#2
grpType		[1]	int		-1	//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[1]	int		0		//index to enemy number (NP)
grpRegion	[1]	int		4		//index in regions array
grpTimeGo	[1]	int		-1		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo	[1]	int		10		//tank trap breach
grpWhoGo	[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale	[1]	int		-1		//no morale
grpLeadership	[1]	int		0		//leadership value
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart	[1]	int		0		//run back to HQ
grpPosMin	[1]	int		0		//Minimum index in coords array
grpPosMax	[1]	int		0		//Maximum index in coords array
grpPosStep	[1]	int		1		//Step increase for next 'waypoint'
grpPosType	[1]	int		0		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[1]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		0		//ideal size. If less than this factory will reinforce
//Sensor#1
grpType		[2]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[2]	int		0		//index to enemy number (NP)
grpRegion	[2]	int		5		//index in regions array
grpTimeGo	[2]	int		3		//30s time trigger (always make >= 0 for defence forces)
grpRegionGo	[2]	int		-1		//no region. index in regions array as trigger
grpWhoGo	[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale	[2]	int		90		//morale = 25%
grpLeadership	[2]	int		50		//leadership value = 75%
grpRetreatXY	[2]	int		0		//retreat (index in coords array) base0 assembly
grpPosStart	[2]	int		4		//index in coords array (depends on grpType)
grpPosMin	[2]	int		3		//Minimum index in coords array
grpPosMax	[2]	int		4		//Maximum index in coords array
grpPosStep	[2]	int		1		//Step increase for next 'waypoint'
grpPosType	[2]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[2]	int		2		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		10		//ideal size. If less than this factory will reinforce
//sensor#2
grpType		[3]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[3]	int		0		//index to enemy number (NP)
grpRegion	[3]	int		6		//index in regions array
grpTimeGo	[3]	int		6		//10s time trigger (always make >= 0 for defence forces)
grpRegionGo	[3]	int		-1		//no region. index in regions array as trigger
grpWhoGo	[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale	[3]	int		90		//pretty timid! morale = 25%
grpLeadership	[3]	int		50		//leadership value = 0%
grpRetreatXY	[3]	int		0		//retreat (index in coords array) base 2 assembly
grpPosStart	[3]	int		4		//index in coords array (depends on grpType)
grpPosMin	[3]	int		2		//Minimum index in coords array
grpPosMax	[3]	int		4		//Maximum index in coords array
grpPosStep	[3]	int		1		//Step increase for next 'waypoint'
grpPosType	[3]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[3]	int		1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		8		//ideal size. If less than this factory will reinforce
//MRLS
grpType		[4]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[4]	int		0		//index to enemy number (NP)
grpRegion	[4]	int		7		//index in regions array
grpTimeGo	[4]	int		120		//20mins time trigger (always make >= 0 for defence forces)
grpRegionGo	[4]	int		12		//tanktrap breach
grpWhoGo	[4]	int		0		//player number to cross trigger region (may not need?)
grpMorale	[4]	int		50		//morale = 50%
grpLeadership	[4]	int		50		//leadership value = 75%
grpRetreatXY	[4]	int		1		//retreat (index in coords array) base2 assembly
grpPosStart	[4]	int		3		//index in coords array (depends on grpType)
grpPosMin	[4]	int		2		//Minimum index in coords array
grpPosMax	[4]	int		4		//Maximum index in coords array
grpPosStep	[4]	int		1		//Step increase for next 'waypoint'
grpPosType	[4]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[4]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[4]	int		6		//ideal size. If less than this factory will reinforce
//Cyborgs#1
grpType		[5]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[5]	int		0		//index to enemy number (NP)
grpRegion	[5]	int		8		//index in regions array
grpTimeGo	[5]	int		180		//30mins time trigger (always make >= 0 for defence forces)
grpRegionGo	[5]	int		13		//index in regions array as protect region
grpWhoGo	[5]	int		0		//player on causeway
grpMorale	[5]	int		50		//morale = 50%
grpLeadership	[5]	int		50		//leadership value = 75%
grpRetreatXY	[5]	int		1		//retreat (index in coords array) cyborg factory2 assembly
grpPosStart	[5]	int		4		//-1 = no waypoints. index in coords array (depends on grpType)
grpPosMin	[5]	int		2		//Minimum index in coords array
grpPosMax	[5]	int		4		//Maximum index in coords array
grpPosStep	[5]	int		1		//Step increase for next 'waypoint'
grpPosType	[5]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[5]	int		3		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[5]	int		10		//ideal size. If less than this factory will reinforce
//Cyborgs#2
grpType		[6]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[6]	int		0		//index to enemy number (NP)
grpRegion	[6]	int		9		//index in regions array (same as base region)
grpTimeGo	[6]	int		180		//30mins time trigger (always make >= 0 for defence forces)
grpRegionGo	[6]	int		13		//death causeway
grpWhoGo	[6]	int		0		//player on causeway
grpMorale	[6]	int		50		//morale = 50%
grpLeadership	[6]	int		50		//leadership value = 75%
grpRetreatXY	[6]	int		1		//retreat last cyborg factory assembly
grpPosStart	[6]	int		2		//index in coords array (depends on grpType)
grpPosMin	[6]	int		2		//Minimum index in coords array
grpPosMax	[6]	int		4		//Maximum index in coords array
grpPosStep	[6]	int		1		//Step increase for next 'waypoint'
grpPosType	[6]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[6]	int		5		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[6]	int		10		//ideal size. If less than this factory will reinforce

//phantom group (transport)
grpType		[7]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[7]	int		0		//index to enemy number (NP)
grpRegion	[7]	int		-1		//no region (empty at start)
grpTimeGo	[7]	int		2		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo	[7]	int		-1		//death causeway
grpWhoGo	[7]	int		0		//player on causeway
grpMorale	[7]	int		50		//morale = 50%
grpLeadership	[7]	int		50		//leadership value = 75%
grpRetreatXY	[7]	int		1		//retreat last cyborg factory assembly
grpPosStart	[7]	int		2		//index in coords array (depends on grpType)
grpPosMin	[7]	int		2		//Minimum index in coords array
grpPosMax	[7]	int		4		//Maximum index in coords array
grpPosStep	[7]	int		1		//Step increase for next 'waypoint'
grpPosType	[7]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[7]	int		6		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[7]	int		10		//ideal size. If less than this factory will reinforce

//Hovers#1 
grpType		[8]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[8]	int		0		//index to enemy number (NP)
grpRegion	[8]	int		10		//index in regions array (same as base region)
grpTimeGo	[8]	int		6		//1min time trigger (always make >= 0 for defence forces)
grpRegionGo	[8]	int		13		//death causeway
grpWhoGo	[8]	int		0		//player on causeway
grpMorale	[8]	int		90		//morale = 10%
grpLeadership	[8]	int		50		//leadership value = 50%
grpRetreatXY	[8]	int		1		//retreat last cyborg factory assembly
grpPosStart	[8]	int		4		//index in coords array (depends on grpType)
grpPosMin	[8]	int		2		//Minimum index in coords array
grpPosMax	[8]	int		4		//Maximum index in coords array
grpPosStep	[8]	int		1		//Step increase for next 'waypoint'
grpPosType	[8]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[8]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[8]	int		6		//ideal size. If less than this factory will reinforce

//Hovers#2 (defensive) 
grpType		[9]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer	[9]	int		0		//index to enemy number (NP)
grpRegion	[9]	int		11		//index in regions array (same as base region)
grpTimeGo	[9]	int		6		//1min time trigger (always make >= 0 for defence forces)
grpRegionGo	[9]	int		1		//protect base 1 region
grpWhoGo	[9]	int		0		//player on causeway
grpMorale	[9]	int		90		//morale = 10%
grpLeadership	[9]	int		50		//leadership value = 50%
grpRetreatXY	[9]	int		1		//retreat last cyborg factory assembly
grpPosStart	[9]	int		5		//index in coords array (depends on grpType)
grpPosMin	[9]	int		5		//Minimum index in coords array
grpPosMax	[9]	int		8		//Maximum index in coords array
grpPosStep	[9]	int		1		//Step increase for next 'waypoint'
grpPosType	[9]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory	[9]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[9]	int		6		//ideal size. If less than this factory will reinforce


/* Factories */
numFactories		int		7	//6		//MAX = 10

//factory for hovers
factID		[0]	int		0		//index to structures
factAssXY	[0]	int		0		//index to assembly point. -1 for don't set
factTimeGo	[0]	int		0		//delay before starting production in 10s
factRegionGo	[0]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin	[0]	int		17		//index to starting template
factTempMax	[0]	int		19		//index to maximum template
factEvery	[0]	int		5		//50s .Time in 10s for factory to produce

factID		[1]	int		1		//index to structures
factAssXY	[1]	int		-1		//index to assembly point. -1 for don't set
factTimeGo	[1]	int		120		//20 mins 
factRegionGo	[1]	int		12		//tank trap breach
factTempMin	[1]	int		7		//index to starting template
factTempMax	[1]	int		13		//index to maximum template
factEvery	[1]	int		5		//50s .Time in 10s for factory to produce

factID		[2]	int		2		//index to structures
factAssXY	[2]	int		-1		//index to assembly point. -1 for don't set
factTimeGo	[2]	int		240		//40 mins
factRegionGo	[2]	int		13		//on causeway
factTempMin	[2]	int		10		//index to starting template
factTempMax	[2]	int		13		//index to maximum template
factEvery	[2]	int		5		//50s .Time in 10s for factory to produce

//cyborg factories
factID		[3]	int		3		//index to structures
factAssXY	[3]	int		-1		//index to assembly point. -1 for don't set
factTimeGo	[3]	int		0		//delay before starting production in 10s
factRegionGo	[3]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin	[3]	int		14		//index to starting template
factTempMax	[3]	int		16		//index to maximum template
factEvery	[3]	int		4		//40s .Time in 10s for factory to produce

factID		[4]	int		4		//index to structures
factAssXY	[4]	int		-1		//index to assembly point. -1 for don't set
factTimeGo	[4]	int		120		//20 mins delay before starting production in 10s
factRegionGo	[4]	int		12		//tanktrap breach
factTempMin	[4]	int		14		//index to starting template
factTempMax	[4]	int		16		//index to maximum template
factEvery	[4]	int		4		//40s .Time in 10s for factory to produce

factID		[5]	int		5		//index to structures
factAssXY	[5]	int		1		//index to assembly point. -1 for don't set
factTimeGo	[5]	int		240		//40 mins delay before starting production in 10s
factRegionGo	[5]	int		13		//on causeway
factTempMin	[5]	int		14		//index to starting template
factTempMax	[5]	int		16		//index to maximum template
factEvery	[5]	int		4		//40s .Time in 10s for factory to produce

//transport factory
factID		[6]	int		-2		//Phantom Factory (for droids coming in off edge of map)
factAssXY	[6]	int		1		//index to LZ.MUST BE SET FOR ENEMY TRANSPORTS
factTimeGo	[6]	int		180		//30mins delay before starting production in 10s
factRegionGo	[6]	int		13		//middle of causeway
factTempMin	[6]	int		9		//index to starting template
factTempMax	[6]	int		12		//index to maximum template
factEvery	[6]	int		60		//10mins .Time in 10s for factory to produce

/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
oilRes	FEATURESTAT	"OilResource"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports
transSnd		SOUND		"pcv381.ogg"		//enemy transport landing
LZComp		SOUND		"pcv445.ogg"
LZClear		SOUND		"lz-clear.ogg"

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated
baseSnd[4]	SOUND		"pcv382.ogg"	//Enemy LZ detected

/* NEW STUFF FOR THREAT ASSESSMENT */
//this only works on groups with Morale Values
//if not declared just won't do anything!!
threatLight		int			2	//value for light vehicles
threatMedium	int			4	//value for medium vehicles
threatHeavy		int			8	//value for large vehicles
threatRange		int			750	//range to check for enemy and player threats
/* end of NEW STUFF */



}
