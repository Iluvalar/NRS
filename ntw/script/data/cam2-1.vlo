//Generic VLO file template for start/expand levels

//Cam2-1.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"CAM_2B"	//points to next level


/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		2
//cyborgs now player 2!!!
//enemy[1]	int		7
alliancePlayer	int		0		//ally player with self (could be a different player number
allianceEnemy[0]	int	2	//7		//ally enemy with self (could be a different player number
//allianceEnemy[1]	int	2
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE


/* Starting Enemy Power */
power[0]	int		10000		//starting power values for each enemy listed above
//power[1]	int		1000

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		0
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		0
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		0
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		0
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		0
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		0

/* Initialisation */
centreX		int		960	//starting view centre (in world units)
centreY		int		7488
scrollX1	int		0	//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		64
scrollY2	int		64
zoomLevel	int		1	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		1	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
//These now represent the coords for the current map - ie cam2-1! Hurrah!
LZX[0]		int		7	//coords of LZs in tile units
LZY[0]		int		58
//special, last LZ is for next map!! (don't count in numLZ) DON'T NEED ANYMORE
//LZX[1]		int		87	//coords of Campaign Map LZ in tile units
//LZY[1]		int		100

/* Transport exit and entry */
transX[0]	int		1	//entry
transY[0]	int		55
transX[1]	int		10	//exit
transY[1]	int		62

ReinforceTime	INT		-1	// number of seconds*10 for transport, -1 for no reinforcements

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		19
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade03"	
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials03"	
startTech	[0]	[2]	RESEARCHSTAT	"R-Vehicle-Engine04"	
startTech	[0]	[3]	RESEARCHSTAT	"R-Vehicle-Metals03"	
startTech	[0]	[4]	RESEARCHSTAT	"R-Cyborg-Metals03"	
startTech	[0]	[5]	RESEARCHSTAT	"R-Vehicle-Armor-Heat01"	
startTech	[0]	[6]	RESEARCHSTAT	"R-Cyborg-Armor-Heat01"	
startTech	[0]	[7]	RESEARCHSTAT	"R-Wpn-Cannon-Accuracy02"	
startTech	[0]	[8]	RESEARCHSTAT	"R-Wpn-Cannon-Damage04"
startTech	[0]	[9]	RESEARCHSTAT	"R-Wpn-Cannon-ROF01"
startTech	[0]	[10]	RESEARCHSTAT	"R-Wpn-Flamer-Damage04"
startTech	[0]	[11]	RESEARCHSTAT	"R-Wpn-Flamer-ROF01"
startTech	[0]	[12]	RESEARCHSTAT	"R-Wpn-MG-Damage04"
startTech	[0]	[13]	RESEARCHSTAT	"R-Wpn-MG-ROF02"
startTech	[0]	[14]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"	
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Mortar-Damage03"	
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Mortar-Damage04"	//"R-Wpn-Mortar-ROF01"	
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-RocketSlow-Accuracy03"	
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-RocketSlow-Damage03"	

/* Briefings */
numBriefs	int		1	//MAX 5. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB2_1_MSG2"
briefVal[0]	int		2	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"


/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next
objective[0]	INTMESSAGE	"C21_OBJECTIVE"
objectiveX[0]	int		6464	//doesn't use index to array, use world coords
objectiveY[0]	int		1728

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		0	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		-1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		-1	//number of bases to destroy (uses base[0] to base[#])

/* might use these later if necessary
victory[4]	int		-1	//kill all UNITS belonging to enemy # index
victory[5]	int		-1	//kill all STRUCTURES belonging to enemy # index
victory[6]	int		-1	//REGION index to check for defences built
victory[7]	int		-1	//# of EXTRA defences to build in REGION
*/
linkVictory	BOOL		TRUE	//got to transport (other script)

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//numFail	int		0	//number required to be met (usually one if used!)
//only one of these has to be met
//Use -1 for False, # for True (often an index to check!)

fail	[0]	int		-1	//0	//group # index all got to REGION
fail	[1]	int		-1	//2	//REGION index for above (these count as one condition!)

/* might use these later if necessary
fail	[2]	int		-1	//only Player UNITS need to be killed to lose
fail	[3]	int		-1	//only Player STRUCTURES need to be killed to lose
fail	[4]	int		-1	//Structure index # to be destroyed to lose????
*/
linkFail	BOOL		TRUE

/* Artifacts */
victoryArt	int		0	//number of artifacts required for victory (must be <= numArt)
numArt	int		0	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
/*
artType	[0]	int		1				//get from STRUCTURE
artVal	[0]	int		0				//get from Medium Factory
artX		[0]	int		4928
artY		[0]	int		4288
artComp	[0]	RESEARCHSTAT	"CAM2RESEARCH" //"R-Wpn-MG1Mk1"			//CHANGE THIS RESEARCH STAT
*/

/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/
//structures	[0]	STRUCTURE	423		//Collective Base 1 Factory
//structures	[1]	STRUCTURE	650		//radar Tower
//structures	[2]	STRUCTURE	481		//Base 2 Factory
//structures	[3]	STRUCTURE	623		//Base 3 Factory
//structures	[4]	STRUCTURE	666		//Bunker

/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
//droids		[0]	DROID		3279		//testdroid

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/
/* old templates
templates	[5]	TEMPLATE	"CO-M-Rocket-LtA-T-Halftrack"
templates	[6]	TEMPLATE	"CO-M-MedCan-Tracks"
templates	[7]	TEMPLATE	"CO-M-Mortar1-Halftrack"
*/

templates	[0]	TEMPLATE	"CO-M-Con-T" 		//Truck Vehicle
templates	[1]	TEMPLATE	"CO-M-Repair-T"		//Repair Vehicle
templates	[2]	TEMPLATE	"CO-M-Sensor-T"	//Sensor Vehicle
templates	[3]	TEMPLATE	"CO-M-CBS-T"
templates	[4]	TEMPLATE	"CO-M-HMG-T"

templates	[5]	TEMPLATE	"CO-M-Rocket-LtA-T-T"
templates	[6]	TEMPLATE	"CO-M-MedCan-Tracks"
templates	[7]	TEMPLATE	"CO-M-HvMortar-T"

/*
templates	[8]	TEMPLATE	"CO-M-HvMortar-T"
templates	[9]	TEMPLATE	"CO-H-Command-Track"
templates	[10]	TEMPLATE	"CO-M-Rocket-LtA-T-Halftrack"

//Collective VTOL Templates
templates	[11]	TEMPLATE	"CO-L-Rocket-VTOL-Pod-VTOL"
templates	[12]	TEMPLATE	"CO-L-Rocket-LtA-T-VTOL"
templates	[13]	TEMPLATE	"CO-M-Bomb1-VTOL"

//Cyborg Templates (SHARED)
templates	[14]	TEMPLATE	"Cyb-Flamer-GROUND"
templates	[15]	TEMPLATE	"Cyb-Cannon-GROUND"
templates	[16]	TEMPLATE	"Cyb-Rocket-GROUND"
*/

/* Templates available for this level */
/*
//Trucks
TEMPLATE	"CO-M-Con-T" 

//Repairs
TEMPLATE	"CO-M-Repair-T"

//Sensors
TEMPLATE	"CO-M-Sensor-T"
TEMPLATE	"CO-M-CBS-T"
TEMPLATE	"CO-M-Vstrike-T"
//TEMPLATE	"CO-M-VTOLCBS-Halftrack"

//Commanders
TEMPLATE	"CO-H-Command-Track"

//Tanks
TEMPLATE	"CO-M-HMG-T"
TEMPLATE	"CO-M-MedCan-Tracks"
TEMPLATE	"CO-H-HvyCan-Tracks"
TEMPLATE	"CO-M-HvMortar-T"
TEMPLATE	"CO-M-Rocket-LtA-T-T"			//NEW

//Cyborgs
TEMPLATE	"Cyb-Chain-GROUND"
TEMPLATE	"Cyb-Cannon-GROUND"
TEMPLATE	"Cyb-Rocket-GROUND"
TEMPLATE	"Cyb-Flamer-GROUND"			//NEW

//VTOLS
TEMPLATE	"CO-M-Bomb1-VTOL"
TEMPLATE	"CO-L-Rocket-LtA-T-VTOL"		//NEW

//Sensor Towers
TEMPLATE	"Sys-SensoTower02"
TEMPLATE	"Sys-CB-Tower01"

//Defenses
TEMPLATE	"CO-Tower-MG3"
TEMPLATE	"CO-Tower-LtATRkt"
TEMPLATE	"CO-Tower-MdCan"
*/

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/
coordsX		[0]	int		4416		//base 1 Assembly
coordsY		[0]	int		4928

coordsX		[1]	int		5824		//base 2 Assembly (and valley group retreat!)
coordsY		[1]	int		2368

coordsX		[2]	int		5184		//base 3 Assembly
coordsY		[2]	int		6592

coordsX		[3]	int		3904		//Factory waypoint 1
coordsY		[3]	int		3776	
coordsX		[4]	int		5952		//Factory waypoint 2
coordsY		[4]	int		3776
coordsX		[5]	int		5952		//Factory waypoint 3
coordsY		[5]	int		5952
coordsX		[6]	int		3776		//Factory waypoint 4
coordsY		[6]	int		5952

coordsX		[7]	int		960		//player's LZ
coordsY		[7]	int		7488

coordsX		[8]	int		832		//cyborg base
coordsY		[8]	int		960

coordsX		[9]	int		5696		//Cyb Group way1
coordsY		[9]	int		7104
coordsX		[10]	int		7104		//Cyb Group way2
coordsY		[10]	int		7104
coordsX		[11]	int		7232		//Cyb Group way3
coordsY		[11]	int		3904

/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		2496		//enemy base1 blip
regionsY1	[0]	int		3904
regionsX2	[0]	int		3776
regionsY2	[0]	int		5440

regionsX1	[1]	int		3904		//enemy base2 blip
regionsY1	[1]	int		3904
regionsX2	[1]	int		5824
regionsY2	[1]	int		5952

regionsX1	[2]	int		832		//enemy base3 blip	(cyborg group also)
regionsY1	[2]	int		960
regionsX2	[2]	int		1856
regionsY2	[2]	int		1728

regionsX1	[3]	int		320		//base 1 Factory start
regionsY1	[3]	int		4160		//crossed by 1st derrick
regionsX2	[3]	int		2368
regionsY2	[3]	int		5184	

regionsX1	[4]	int		192		//Player's LZ region for victory
regionsY1	[4]	int		6720
regionsX2	[4]	int		1856
regionsY2	[4]	int		8000

regionsX1	[5]	int		7104		//SE Cyborg group
regionsY1	[5]	int		6336
regionsX2	[5]	int		7616
regionsY2	[5]	int		6848	

/* reuse
regionsX1	[6]	int		704		//region group 0 (along valley)
regionsY1	[6]	int		4544
regionsX2	[6]	int		1728		//include guys on hill!
regionsY2	[6]	int		4800	
regionsX1	[7]	int		576		//region group 1
regionsY1	[7]	int		4032
regionsX2	[7]	int		1728
regionsY2	[7]	int		4543	
regionsX1	[8]	int		576		//region group 2
regionsY1	[8]	int		3136
regionsX2	[8]	int		1216
regionsY2	[8]	int		4032	
regionsX1	[9]	int		576		//region group 3
regionsY1	[9]	int		1728
regionsX2	[9]	int		1600
regionsY2	[9]	int		4032	
regionsX1	[10]	int		704		//region group 4
regionsY1	[10]	int		704
regionsX2	[10]	int		2112
regionsY2	[10]	int		1728	

regionsX1	[11]	int		1728		//region group 5 (radar defenders)
regionsY1	[11]	int		320
regionsX2	[11]	int		6208
regionsY2	[11]	int		3904	
regionsX1	[12]	int		4032		//protect region group 5 (radar object)
regionsY1	[12]	int		2368
regionsX2	[12]	int		4800
regionsY2	[12]	int		3136	
*/
/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
/*reuse
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//sect15
sectorsX1	[0]	int		10432
sectorsY1	[0]	int		12736
sectorsX2	[0]	int		14272
sectorsY2	[0]	int		15552
//sect21
sectorsX1	[1]	int		8896
sectorsY1	[1]	int		13760
sectorsX2	[1]	int		10304
sectorsY2	[1]	int		15040
//sect20
sectorsX1	[2]	int		6336
sectorsY1	[2]	int		13760
sectorsX2	[2]	int		8768
sectorsY2	[2]	int		14144
//ravine entrance to 1B
//sect
sectorsX1	[3]	int		2112
sectorsY1	[3]	int		12736
sectorsX2	[3]	int		6336
sectorsY2	[3]	int		14784
//sect
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		0		//MAX = 5. Must be same as number of bases listed next
basePlayer	[0]	int		0		//enemy player number who owns base
baseMsg	[0]	INTMESSAGE	"C21_BASE1"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		0		//index to regions
baseWav1	[0]	int		0		//index to baseSnd	Superior Weapons
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0
baseMsg	[1]	INTMESSAGE	"C21_BASE2"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated

basePlayer	[2]	int		1
baseMsg	[2]	INTMESSAGE	"C21_BASE3"
baseRegion	[2]	int		2
baseWav1	[2]	int		0		//index to baseSnd	enemy detected
baseWav2	[2]	int		3		//index to baseSnd	Eradicated

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		3	//group MAX = 10
//one group to patrol around the collective base
grpType		[0]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (Collective)
grpRegion		[0]	int		-1		//index in regions array
grpTimeGo		[0]	int		1		//10s. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		-1		//index in regions array as trigger
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		50		//don't set morale/leadership/retreat
grpLeadership	[0]	int		50		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		3		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		3		//Minimum index in coords array
grpPosMax		[0]	int		6		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		8		//ideal size. If less than this factory will reinforce

//cyborg group
grpType		[1]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (Collective)
grpRegion		[1]	int		2		//cyborg base region
grpTimeGo		[1]	int		3		//move after 30 seconds
grpRegionGo		[1]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		50		//morale = 50%
grpLeadership	[1]	int		50		//leadership value
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart		[1]	int		7		//player's LZ
grpPosMin		[1]	int		6		//main base
grpPosMax		[1]	int		8		//cyborg base
grpPosStep		[1]	int		1		//
grpPosType		[1]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[1]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		0		//ideal size. If less than this factory will reinforce

//cyborg group2
grpType		[2]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (Collective)
grpRegion		[2]	int		5		//cyborg base region
grpTimeGo		[2]	int		0		//move after 30 seconds
grpRegionGo		[2]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		-1		//morale = 50%
grpLeadership	[2]	int		0		//leadership value
grpRetreatXY	[2]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart		[2]	int		9		//L shaped patrol region
grpPosMin		[2]	int		9		//
grpPosMax		[2]	int		11		//
grpPosStep		[2]	int		1		//
grpPosType		[2]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		0		//ideal size. If less than this factory will reinforce

/* Factories */
numFactories		int		0		//MAX = 10
//collective tank factory
factID		[0]	int		0		//index to structures
factAssXY		[0]	int		0		//index to assembly point. -1 for don't set
factTimeGo		[0]	int		0		//delay before starting production in 10s
factRegionGo	[0]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		5		//index to starting template
factTempMax		[0]	int		7		//index to maximum template
factEvery		[0]	int		9		//1.5 min. Time in 10s for factory to try to produce again

/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports
LZComp		SOUND		"pcv445.ogg"
LZClear		SOUND		"lz-clear.ogg"

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated

/* NEW STUFF FOR THREAT ASSESSMENT */
//this only works on groups with Morale Values
//if not declared just won't do anything!!
threatLight		int			2	//value for light vehicles
threatMedium	int			4	//value for medium vehicles
threatHeavy		int			8	//value for large vehicles
threatRange		int			512	//range to check for enemy and player threats
/* end of NEW STUFF */

}
